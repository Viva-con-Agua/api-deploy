#!/bin/bash

####
# Deployment scripts for stage
##

##
# Pull a specific repository, update the corresponding docker
##
if [ -f ".env" ]; then
    source .env
else
    branch="develop"
    editor="nvim"
fi


install_docker() {
    cd repos &&
    git clone -b ${branch} https://github.com/Viva-con-Agua/${1}.git && 
    mkdir -p ../config/${1} &&
    cp -r ${1}/config/* ../config/${1}/
    cd .. &&
    ${editor} docker-compose.yml &&
    ${editor} routes/location.${2} &&
    ${editor} routes/default.upstream &&
    if docker-compose config --services | grep -q '${1}_db'; then
        ${editor} config/${1}/config.yml &&
        ${editor} config/${1}/database.env
    else
        ${editor} config/${1}/config.yml 
    fi
}

setup_docker() {
    if docker-compose config --services | grep -q '${1}_db'; then
        docker-compose up -d --build ${1}-db
        docker-compose up -d --build ${1}
    else
        docker-compose up -d --build ${1}
    fi
}

setup_all(){
    ( setup_one mail-backend || echo "cant reinstall mail-backend" ) &&
    ( setup_one auth-backend || echo "cant reinstall auth-backend" ) &&
    ( setup_one payment-backend || echo "cant reinstall payment-backend" ) 

}
update_docker() {
    cd repos/${1} && 
    git pull && 
	cd ../../ && 
    docker-compose up -d --build $1;
}

##
# Remove docker and restart it
##
reup_docker(){
  docker-compose rm -s $1 && docker-compose up -d $1;
}

##
# Restart docker
##
restart_docker(){
  docker-compose restart $1;
}

restore_docker(){
    docker exec -i ${1}-db sh -c 'exec mysql -uroot -pyes auth' < ${2}
}

##
# Print Api help
##
help(){
    echo "Usage: ./please <command> <serviceName / version>"
    echo " install <serviceName> <apiVersion>    # install backend docker"
    echo " setup <serviceName>                   # setup service"
    echo " setup_all                             # setup all services"
    echo " update <serviceName>                  # pull the 'develop' branches, build and setup docker and push docker into 'develop'"
    echo " restart <serviceName>                 # delete and set up service"
	echo " reup <serviceName>                    # remove and restart docker"
}

##
# Main
##
case $1 in
    install) install_docker $2 $3;;
  setup) setup_docker $2;;
  setup_all) setup_all;;
  update) update_docker $2;;
  restart) restart_docker $2;;
  reup) reup_docker $2 $3;;
  restore) restore_docker $2 $3;;
  *) help
esac
